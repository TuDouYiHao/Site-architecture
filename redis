redis安装
下载地址http://redis.io/download，下载最新稳定版本。
$ wget http://download.redis.io/releases/redis-4.0.9.tar.gz
$ tar xzf redis-4.0.9.tar.gz
$ cd redis-4.0.9
$ yum install -y make gcc
$ make
redis简单配置
# cp redis.conf redis.conf.bak
# vim redis.conf     ---修改如下
bind 127.0.0.1　　#只监听内网IP
daemonize yes　　　　　#开启后台模式将on改为yes
timeout 300　　　　　　#连接超时时间
port 6379                      #端口号
databases 0                 存储Session的Redis库编号
dir ./　　#本地数据库存放目录该目录需要存在
pidfile /var/run/redis_6379.pid　　#定义pid文件
logfile /var/log/redis_6379.log　　#定义log文件
requirepass tiger     # 设置密码
配置redis为systemctl启动
# cd /lib/systemd/system
# vim redis.service
[Unit]
Description=Redis
After=network.target

[Service]
ExecStart=/root/redis/src/redis-server    /root/redis/redis.conf  --daemonize no
ExecStop=/root/redis/src/redis-cli -h 127.0.0.1 -p 6379 shutdown

[Install]
WantedBy=multi-user.target
=====================
参数详解:
• [Unit] 表示这是基础信息 
• Description 是描述
• After 是在那个服务后面启动，一般是网络服务启动后启动

• [Service] 表示这里是服务信息 
• ExecStart 是启动服务的命令
• ExecStop 是停止服务的指令

• [Install] 表示这是是安装相关信息 
• WantedBy 是以哪种方式启动：multi-user.target表明当系统以多用户方式（默认的运行级别）启动时，这个服务需要被自动运行。
redis启动:
$ src/redis-server 或者#启动：nohup ./src/redis-server &
主从同步部署
测试环境:centos7.4
redis-master:192.168.19.129   vm1
redis-slave1:192.168.19.136   vm4
redis-slave2:192.168.19.135   vm5
1.首先三台服务器将redis单机部署完成。
编辑master的redis配置文件:
[root@redis-master ~]# cd /usr/local/redis-4.0.9
[root@redis-master redis]# vim redis.conf
bind 0.0.0.0
protected-mode no
2.修改slave1的配置文件：
[root@redis-slave1 ~]# cd /root/redis/
[root@redis-slave1 redis]# vim redis.conf      ---修改如下：
bind  0.0.0.0
protected-mode  no
slaveof  192.168.19.129   6379   IP为主机IP
slave2的配置文件修改和slave1相同
重启三台Redis：systemctl  start redis-service
查看：netstat -lntp
配置哨兵模式
1每台机器上修改redis主配置文件redis.conf文件设置：bind 0.0.0.0       ---配置主从时已经完成
2.每台机器上修改sentinel.conf配置文件：修改如下配置
[root@redis-master src]# cd ..
[root@redis-master redis]# vim sentinel.conf
        sentinel monitor mymaster 192.168.19.129 6379 2 (slave上面写的是master的ip，master写自己ip)
        sentinel down-after-milliseconds mymaster 3000
        sentinel failover-timeout mymaster 10000
        protected-mode no
关闭加密
protected-mode no
构成master客观下线的前提，至少有两个sentinel(哨兵)主观认为master已经下线
sentinel monitor mymaster 192.168.19.129 6379 2 
sentinel每隔一定时间向其已知的master发送ping指令，在设置的这个时间内如果没有收master返回的数据包，就会把master标记为主观下线。单位为毫秒
sentinel down-after-milliseconds mymaster 3000
在这个时间内如果主从切换没有完成就停止切换。单位毫秒
sentinel failover-timeout mymaster 10000
3.每台机器启动哨兵服务：
        # ./src/redis-sentinel sentinel.conf
注意:在生产环境下将哨兵模式启动放到后台执行:         ./src/redis-sentinel sentinel.conf &
在master上面执行
这是启动成功的！

